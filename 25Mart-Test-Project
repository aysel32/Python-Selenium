# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as exc
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from webdriver_manager.chrome import ChromeDriverManager
from constant import globalconstants as gc


class Test_a_shopping_story():
  def setup_method(self, method):
    self.driver = webdriver.Chrome(ChromeDriverManager().install())
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
    

  def test_invalid_login(self):

    self.driver.get(gc.URL)
    self.driver.maximize_window()
    usernameInput=self.driver.find_element(By.ID, gc.username)
    usernameInput.click()
    usernameInput.send_keys("Aysel") 
    WebDriverWait(self.driver, 5).until(exc.visibility_of_element_located((By.ID, gc.password)))   
    passwordInput=self.driver.find_element(By.ID, gc.password)
    passwordInput.click()
    passwordInput.send_keys("6543210")    
    WebDriverWait(self.driver, 5).until(exc.visibility_of_element_located((By.ID, gc.loginBtn)))
    loginBtn=self.driver.find_element(By.ID,gc.loginBtn)
    loginBtn.click()
    assert self.driver.find_element(By.XPATH,"/html/body/div/div/div[2]/div[1]/div/div/form/div[3]").text ==gc.user_passw_mess
    
    
  def test_password_reqired(self):
    self.driver.get(gc.URL)
    self.driver.maximize_window()
    
    usernameInput=self.driver.find_element(By.ID, gc.username)
    usernameInput.click()
    usernameInput.send_keys("standard_user") 

    self.driver.find_element(By.ID, "login-button").click()
    loginBtn=self.driver.find_element(By.ID,gc.loginBtn)
    loginBtn.click()
    
    passwordInput=self.driver.find_element(By.ID, gc.password)
    passwordInput.click()
    passwordInput.send_keys("")  
    
    
    assert self.driver.find_element(By.XPATH, "//div[@id=\'login_button_container\']/div/form/div[3]/h3").text == gc.required_passw_mess
    
  
  
  def test_username_required(self):
    self.driver.get(gc.URL)
    self.driver.maximize_window()
        
    usernameInput=self.driver.find_element(By.ID, gc.username)
    usernameInput.click()
    usernameInput.send_keys("") 
    
    passwordInput=self.driver.find_element(By.ID, gc.password)
    passwordInput.click()
    passwordInput.send_keys("secret_sauce")  
    
    self.driver.find_element(By.ID, "login-button").click()
    loginBtn=self.driver.find_element(By.ID,gc.loginBtn)
    loginBtn.click()
    
    assert self.driver.find_element(By.XPATH, "//div[@id=\'login_button_container\']/div/form/div[3]/h3").text == gc.required_user_mess
  
  
    
  def test_username_password_locked(self):
    self.driver.get(gc.URL)
    self.driver.maximize_window()
    
    
    usernameInput=self.driver.find_element(By.ID, gc.username)
    usernameInput.click()
    usernameInput.send_keys("locked_out_user") 
    
    passwordInput=self.driver.find_element(By.ID, gc.password)
    passwordInput.click()
    passwordInput.send_keys("secret_sauce")  
    
    self.driver.find_element(By.ID, "login-button").click()
    loginBtn=self.driver.find_element(By.ID,gc.loginBtn)
    loginBtn.click()
    assert self.driver.find_element(By.XPATH, "//div[@id=\'login_button_container\']/div/form/div[3]/h3").text == gc.locked_mess
    
    
    
  def test_username_password_not_match(self):
    self.driver.get(gc.URL)
    self.driver.maximize_window()
    
    
    usernameInput=self.driver.find_element(By.ID, gc.username)
    usernameInput.click()
    usernameInput.send_keys("olcer") 
    
    passwordInput=self.driver.find_element(By.ID, gc.password)
    passwordInput.click()
    passwordInput.send_keys("123456")  
    
    self.driver.find_element(By.ID, "login-button").click()
    loginBtn=self.driver.find_element(By.ID,gc.loginBtn)
    loginBtn.click()
    assert self.driver.find_element(By.XPATH, "//div[@id=\'login_button_container\']/div/form/div[3]/h3").text == gc.user_passw_mess
    
        
  def test_valid_login(self):
    self.driver.get(gc.URL)
    self.driver.maximize_window()
    
    usernameInput = self.driver.find_element(By.ID, gc.username)
    usernameInput.click()
    usernameInput.send_keys("standard_user")
    
    passwordInput = self.driver.find_element(By.ID, gc.password)
    passwordInput.click()
    passwordInput.send_keys("secret_sauce")
    
    WebDriverWait(self.driver, 5).until(exc.visibility_of_element_located((By.ID, gc.loginBtn)))
    loginBtn = self.driver.find_element(By.ID, gc.loginBtn)
    loginBtn.click()
    
    
  def test_card_shopping(self):
    self.driver.get(gc.URL)
    self.driver.maximize_window()    

    
    usernameInput = self.driver.find_element(By.ID, gc.username)
    usernameInput.click()
    usernameInput.send_keys("standard_user")
    
    passwordInput = self.driver.find_element(By.ID, gc.password)
    passwordInput.click()
    passwordInput.send_keys("secret_sauce")
    
    WebDriverWait(self.driver, 5).until(exc.visibility_of_element_located((By.ID, gc.loginBtn)))
    loginBtn = self.driver.find_element(By.ID, gc.loginBtn)
    loginBtn.click()
    
    
    tShort=self.driver.find_element(By.CSS_SELECTOR, "#item_1_title_link > .inventory_item_name")
    tShort.click()
    tShort = self.driver.find_element(By.ID, gc.t_short)
    tShort.click()
    tShort = self.driver.find_element(By.XPATH, "//div[3]/a").click()
    checkout = self.driver.find_element(By.ID, gc.checkout)
    checkout.click()
    firstName = self.driver.find_element(By.ID,gc.firstname)
    firstName.click()
    firstName.send_keys("aysel")
    lastName = self.driver.find_element(By.ID, gc.lastname)
    lastName.click()
    lastName.send_keys("ölçer")
    postCode = self.driver.find_element(By.ID, gc.potscoce)
    postCode.click()
    postCode.send_keys("6796")
    contin = self.driver.find_element(By.ID, gc.contin)
    contin.click()
    finish = self.driver.find_element(By.ID, gc.finish)
    finish.click()
    assert self.driver.find_element(By.XPATH, "//h2[contains(.,\'Thank you for your order!\')]").text == gc.success
    assert self.driver.find_element(By.XPATH, "//body/div/div/div/div[2]/div").text == gc.order_confirmation
    backTo = self.driver.find_element(By.ID, "back-to-products")
    backTo.click()
