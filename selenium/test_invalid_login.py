# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from webdriver_manager.chrome import ChromeDriverManager
from constant import globalconstants as gc


class TestInvalidlogin():
  def setup_method(self, method):
    self.driver = webdriver.Chrome(ChromeDriverManager().install())
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_invalid_login(self):
    self.driver.get(gc.URL)
    self.driver.maximize_window()
    
    usernameInput = self.driver.find_element(By.ID, gc.username)
    usernameInput.click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.ID, gc.username)))
    usernameInput.send_keys("Aysel") 
    
    passwordInput = self.driver.find_element(By.ID, gc.password)
    passwordInput.click() 
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.ID, gc.password)))
    passwordInput.send_keys("Ölçer")
    
    loginButton = self.driver.find_element(By.ID,gc.loginBtn)
    loginButton.click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.ID, gc.loginBtn)))
    
    assert self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"error\"]").text == gc.user_passw_mess
  
